# Generated by Django 4.1.6 on 2023-03-12 17:55

from django.db import migrations, models
import django.db.models.deletion
import oioioi.base.fields
import oioioi.contests.fields
from oioioi.contests.models import submission_statuses
import oioioi.encdec.models
import oioioi.filetracker.fields
import oioioi.problems.models
import oioioi.programs.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contests', '0014_contest_enable_editor'),
        ('problems', '0031_auto_20220328_1124'),
    ]

    operations = [
        migrations.CreateModel(
            name='EncdecTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='name')),
                ('input_file', oioioi.filetracker.fields.FileField(blank=True, max_length=255, null=True, upload_to=oioioi.problems.models.make_problem_filename, verbose_name='input')),
                ('hint_file', oioioi.filetracker.fields.FileField(blank=True, max_length=255, null=True, upload_to=oioioi.problems.models.make_problem_filename, verbose_name='hint')),
                ('kind', oioioi.base.fields.EnumField(max_length=64, verbose_name='kind')),
                ('group', models.CharField(max_length=30, verbose_name='group')),
                ('encoder_time_limit', models.IntegerField(null=True, validators=[oioioi.programs.models.validate_time_limit], verbose_name='encoder time limit (ms)')),
                ('decoder_time_limit', models.IntegerField(null=True, validators=[oioioi.programs.models.validate_time_limit], verbose_name='decoder time limit (ms)')),
                ('encoder_memory_limit', models.IntegerField(blank=True, null=True, validators=[oioioi.programs.models.validate_memory_limit], verbose_name='encoder memory limit (KiB)')),
                ('decoder_memory_limit', models.IntegerField(blank=True, null=True, validators=[oioioi.programs.models.validate_memory_limit], verbose_name='decoder_memory limit (KiB)')),
                ('max_score', models.IntegerField(default=10, verbose_name='score')),
                ('order', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('problem_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contests.probleminstance')),
            ],
            options={
                'verbose_name': 'test',
                'verbose_name_plural': 'tests',
                'ordering': ['order'],
                'unique_together': {('problem_instance', 'name')},
            },
        ),
        migrations.CreateModel(
            name='EncdecTestReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('encoder_status', oioioi.base.fields.EnumField(submission_statuses)),
                ('decoder_status', oioioi.base.fields.EnumField(submission_statuses)),
                ('comment', models.CharField(blank=True, max_length=255)),
                ('score', oioioi.contests.fields.ScoreField(blank=True, max_length=255, null=True)),
                ('max_score', oioioi.contests.fields.ScoreField(blank=True, max_length=255, null=True)),
                ('encoder_time_used', models.IntegerField(blank=True)),
                ('decoder_time_used', models.IntegerField(blank=True)),
                ('encoder_output_file', oioioi.filetracker.fields.FileField(blank=True, max_length=255, null=True, upload_to=oioioi.encdec.models.make_encoder_output_filename)),
                ('decoder_output_file', oioioi.filetracker.fields.FileField(blank=True, max_length=255, null=True, upload_to=oioioi.encdec.models.make_decoder_output_filename)),
                ('test_name', models.CharField(max_length=30)),
                ('test_group', models.CharField(max_length=30)),
                ('test_encoder_time_limit', models.IntegerField(blank=True, null=True)),
                ('test_decoder_time_limit', models.IntegerField(blank=True, null=True)),
                ('submission_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contests.submissionreport')),
                ('test', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='encdec.encdectest')),
            ],
        ),
        migrations.CreateModel(
            name='EncdecUserOutGenStatus',
            fields=[
                ('testreport', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='userout_status', serialize=False, to='encdec.encdectestreport')),
                ('status', oioioi.base.fields.EnumField(default='?', max_length=64)),
                ('visible_for_user', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='EncdecChecker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exe_file', oioioi.filetracker.fields.FileField(blank=True, max_length=255, null=True, upload_to=oioioi.problems.models.make_problem_filename, verbose_name='encoder-decoder checker executable file')),
                ('problem', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='problems.problem')),
            ],
            options={
                'verbose_name': 'encoder-decoder output checker',
                'verbose_name_plural': 'encoder-decoder output checkers',
            },
        ),
        migrations.CreateModel(
            name='EncdecChannel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exe_file', oioioi.filetracker.fields.FileField(blank=True, max_length=255, null=True, upload_to=oioioi.problems.models.make_problem_filename, verbose_name='encoder-decoder channel executable file')),
                ('problem', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='problems.problem')),
            ],
            options={
                'verbose_name': 'encoder-decoder channel',
                'verbose_name_plural': 'encoder-decoder channels',
            },
        ),
        migrations.CreateModel(
            name='LanguageOverrideForEncdecTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('encoder_time_limit', models.IntegerField(null=True, validators=[oioioi.programs.models.validate_time_limit], verbose_name='encoder time limit (ms)')),
                ('decoder_time_limit', models.IntegerField(null=True, validators=[oioioi.programs.models.validate_time_limit], verbose_name='decoder time limit (ms)')),
                ('encoder_memory_limit', models.IntegerField(blank=True, null=True, validators=[oioioi.programs.models.validate_memory_limit], verbose_name='encoder memory limit (KiB)')),
                ('decoder_memory_limit', models.IntegerField(blank=True, null=True, validators=[oioioi.programs.models.validate_memory_limit], verbose_name='decoder memory limit (KiB)')),
                ('language', models.CharField(max_length=30, verbose_name='language')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='encdec.encdectest')),
            ],
            options={
                'verbose_name': 'encoder-decoder test limit override',
                'verbose_name_plural': 'encoder-decoder tests limit overrides',
                'ordering': ['test__order'],
                'unique_together': {('test', 'language')},
            },
        ),
    ]
