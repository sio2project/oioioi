# Generated by Django 4.2.16 on 2024-11-28 18:50

from django.db import migrations, models

def populate_aggregated_tag_proposals(apps, schema_editor):
    DifficultyTagProposal = apps.get_model('problems', 'DifficultyTagProposal')
    AggregatedDifficultyTagProposal = apps.get_model('problems', 'AggregatedDifficultyTagProposal')
    AlgorithmTagProposal = apps.get_model('problems', 'AlgorithmTagProposal')
    AggregatedAlgorithmTagProposal = apps.get_model('problems', 'AggregatedAlgorithmTagProposal')

    AggregatedDifficultyTagProposal.objects.all().delete()
    AggregatedAlgorithmTagProposal.objects.all().delete()

    difficulty_data = (
        DifficultyTagProposal.objects.values('problem', 'tag')
        .annotate(amount=models.Count('id'))
    )
    AggregatedDifficultyTagProposal.objects.bulk_create([
        AggregatedDifficultyTagProposal(
            problem_id=entry['problem'],
            tag_id=entry['tag'],
            amount=entry['amount']
        )
        for entry in difficulty_data
    ])

    algorithm_data = (
        AlgorithmTagProposal.objects.values('problem', 'tag')
        .annotate(amount=models.Count('id'))
    )
    AggregatedAlgorithmTagProposal.objects.bulk_create([
        AggregatedAlgorithmTagProposal(
            problem_id=entry['problem'],
            tag_id=entry['tag'],
            amount=entry['amount']
        )
        for entry in algorithm_data
    ])

class Migration(migrations.Migration):

    dependencies = [
        ('problems', '0032_aggregated_tag_proposals'),
    ]

    operations = [
        migrations.RunPython(populate_aggregated_tag_proposals)
    ]
