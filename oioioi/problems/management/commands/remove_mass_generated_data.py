import sys
from django.core.management.base import BaseCommand
from django.contrib.auth import get_user_model
from oioioi.problems.models import Problem, AlgorithmTag, AlgorithmTagProposal

User = get_user_model()

class Command(BaseCommand):
    help = (
        "Removes all mass-generated mock data created by the mass create tool. "
        "Deletes Problems with short_name starting with 'auto_prob_', Users with username starting with 'auto_user_', "
        "Algorithm Tags with name starting with 'auto_tag_', and related Algorithm Tag Proposals."
    )

    def handle(self, *args, **options):
        # Delete Algorithm Tag Proposals associated with problems generated by the mock tool first.
        proposals_qs = AlgorithmTagProposal.objects.filter(problem__short_name__startswith='auto_prob_')
        proposals_count = proposals_qs.count()
        proposals_qs.delete()
        self.stdout.write(self.style.SUCCESS(f"Deleted {proposals_count} Algorithm Tag Proposals"))

        # Delete Problems with a short_name starting with 'auto_prob_'
        problems_qs = Problem.objects.filter(short_name__startswith='auto_prob_')
        problems_count = problems_qs.count()
        problems_qs.delete()
        self.stdout.write(self.style.SUCCESS(f"Deleted {problems_count} Problems"))

        # Delete Algorithm Tags with a name starting with 'auto_tag_'
        tags_qs = AlgorithmTag.objects.filter(name__startswith='auto_tag_')
        tags_count = tags_qs.count()
        tags_qs.delete()
        self.stdout.write(self.style.SUCCESS(f"Deleted {tags_count} Algorithm Tags"))

        # Delete Users with username starting with 'auto_user_'
        users_qs = User.objects.filter(username__startswith='auto_user_')
        users_count = users_qs.count()
        users_qs.delete()
        self.stdout.write(self.style.SUCCESS(f"Deleted {users_count} Users"))

        self.stdout.write(self.style.SUCCESS("Mock data removal complete"))
